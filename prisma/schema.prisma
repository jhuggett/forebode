// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "filteredRelationCount"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)

  email    String? @unique @db.VarChar(255)
  password String? @db.VarChar(255)

  account   Account? @relation(fields: [accountId], references: [id], onUpdate: NoAction)
  accountId Int?
  Event     Event[]
}

model Account {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @db.VarChar(255)

  users      User[]
  animals    Animal[]
  events     Event[]
  eventTypes EventType[]
}

model Animal {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @db.VarChar(255)

  account   Account @relation(fields: [accountId], references: [id], onUpdate: NoAction)
  accountId Int

  events Event[]

  eventTypes EventType[]
}

model Event {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  animal   Animal? @relation(fields: [animalId], references: [id])
  animalId Int?

  account   Account? @relation(fields: [accountId], references: [id])
  accountId Int?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  type        EventType @relation(fields: [eventTypeId], references: [id])
  eventTypeId Int
}

model EventType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @db.VarChar(255)

  isAccountLevel Boolean @default(false)

  events Event[]

  animals Animal[]

  relationships EventTypeRelationship[]

  account   Account @relation(fields: [accountId], references: [id])
  accountId Int
}

model EventTypeRelationship {
  id Int @id @default(autoincrement())

  eventTypes EventType[]

  relationshipType EventTypeRelationshipType

  name         String    @default("relationship") @db.VarChar(255)
  compareSince DateTime?
}

enum EventTypeRelationshipType {
  DIFFERENCE
}
